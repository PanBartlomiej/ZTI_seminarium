{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bober\\\\OneDrive\\\\Pulpit\\\\ZTI_seminarium\\\\demo-front\\\\src\\\\components\\\\MyCompontent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MyComponent.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyComponent() {\n  _s();\n  const [data, setData] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Function to handle GET request\n  const handleGet = async () => {\n    const response = await fetch('http://localhost:8080/data');\n    const result = await response.json();\n    setData(result);\n  };\n\n  // Function to handle POST request for login\n  const handleLogin = async () => {\n    const response = await fetch('http://localhost:8080/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: username,\n        password: password\n      })\n    });\n    console.log(body);\n    const result = await response;\n    if (result === 'ok') {\n      window.alert(\"Zalogowano pomyślnie\");\n    } else window.alert(\"Nie udało się zalogować\");\n    // Handle login response here\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleGet,\n      children: \"Get Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"email\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      className: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      className: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), data && /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"pre\",\n      children: JSON.stringify(data, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(MyComponent, \"QaTw8NtDPaNIBNFRiDmqcSG9oS8=\");\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MyComponent","_s","data","setData","username","setUsername","password","setPassword","handleGet","response","fetch","result","json","handleLogin","method","headers","body","JSON","stringify","email","console","log","window","alert","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/bober/OneDrive/Pulpit/ZTI_seminarium/demo-front/src/components/MyCompontent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './MyComponent.css'; // Import the CSS file\r\n\r\nfunction MyComponent() {\r\n  const [data, setData] = useState(null);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  // Function to handle GET request\r\n  const handleGet = async () => {\r\n    const response = await fetch('http://localhost:8080/data');\r\n    const result = await response.json();\r\n    setData(result);\r\n  };\r\n\r\n  // Function to handle POST request for login\r\n  const handleLogin = async () => {\r\n    const response = await fetch('http://localhost:8080/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email: username,\r\n        password: password\r\n      })\r\n    });\r\n    console.log(body);\r\n    const result = await response;\r\n    if(result==='ok'){\r\n        window.alert(\"Zalogowano pomyślnie\");\r\n    }\r\n    else window.alert(\"Nie udało się zalogować\");\r\n    // Handle login response here\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <button className=\"button\" onClick={handleGet}>Get Data</button>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"email\"\r\n        value={username}\r\n        onChange={e => setUsername(e.target.value)}\r\n        className=\"input\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={e => setPassword(e.target.value)}\r\n        className=\"input\"\r\n      />\r\n      <button className=\"button\" onClick={handleLogin}>Login</button>\r\n      {data && <pre className=\"pre\">{JSON.stringify(data, null, 2)}</pre>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}